import express from 'express';
import { Telegraf } from 'telegraf';
import dotenv from 'dotenv';

dotenv.config();

const app = express();
const bot = new Telegraf(process.env.BOT_TOKEN);

const ADMIN_ID = process.env.ADMIN_ID;
const WEBAPP_URL = process.env.WEBAPP_URL;

app.use(express.json());

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  const isAdmin = ctx.from.id.toString() === ADMIN_ID;

  const keyboard = {
    inline_keyboard: [
      [{ text: 'üõí –ü–µ—Ä–µ–π—Ç–∏ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É', web_app: { url: WEBAPP_URL } }],
      ...(isAdmin
        ? [[{ text: 'üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', web_app: { url: `${WEBAPP_URL}/admin` } }]]
        : [])
    ]
  };

  ctx.reply(
    `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${ctx.from.first_name}!`,
    { reply_markup: keyboard }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp
bot.on('message', async (ctx) => {
  if (ctx.webAppData) {
    console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ WebApp:', ctx.webAppData.data);
    await ctx.reply('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!');
  }
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook
const PORT = process.env.PORT || 3000;
const path = `/bot${process.env.BOT_TOKEN}`;
app.use(bot.webhookCallback(path));

// –ó–∞–ø—É—Å–∫ express-—Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
  const webhookUrl = `${WEBAPP_URL}${path}`;
  await bot.telegram.setWebhook(webhookUrl);
  console.log(`üöÄ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${webhookUrl}`);
});
