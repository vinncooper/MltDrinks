import dotenv from 'dotenv';
dotenv.config();

import { Telegraf, Markup } from 'telegraf';
import sqlite3 from 'sqlite3';
import path from 'path';
import { fileURLToPath } from 'url';

// –î–ª—è __dirname –≤ ES-–º–æ–¥—É–ª—è—Ö
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
const TG_TOKEN = process.env.TG_TOKEN;
const TG_ADMIN_ID = process.env.TG_ADMIN_ID;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const db = new sqlite3.Database(path.join(__dirname, 'database', 'mlt.db'));

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(TG_TOKEN);

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
bot.start(async ctx => {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db.run('INSERT OR IGNORE INTO users (id, username, first_name) VALUES (?, ?, ?)', [
      ctx.from.id, ctx.from.username || '', ctx.from.first_name || ''
    ]);
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + —Ö–æ–¥–æ–≤–æ–π —Ç–æ–≤–∞—Ä (–∏–∑ "is_hot" –∏–ª–∏ "is_sale")
    db.all('SELECT * FROM products WHERE is_hot=1 OR is_sale=1 ORDER BY is_hot DESC, is_sale DESC, id DESC LIMIT 3', [], (err, rows) => {
      let msg = `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Mlt Drinks*!\n\n–í–æ—Ç –Ω–∞—à–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:\n`;
      rows.forEach(p => msg += `\n*${p.name}* ‚Äî ${p.price}‚ÇΩ (${p.in_stock ? '–í –Ω–∞–ª–∏—á–∏–∏' : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'})`);
      msg += `\n\n–ù–∞–∂–º–∏—Ç–µ /catalog –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ–≥–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞.`;
      ctx.replyWithMarkdown(msg, Markup.keyboard([['–ö–∞—Ç–∞–ª–æ–≥', '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º']]).resize());
    });
  } catch(e) { ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è'); }
});

// –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ + –∫–∞—Ç–∞–ª–æ–≥
bot.hears(['–ö–∞—Ç–∞–ª–æ–≥', '/catalog'], async ctx => {
  db.all('SELECT * FROM categories', [], (err, cats) => {
    const kb = cats.map(c=>[c.name]);
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', Markup.keyboard([...kb, ['–•–∏—Ç—ã –ø—Ä–æ–¥–∞–∂', '–ê–∫—Ü–∏–∏', '–ù–∞–∑–∞–¥']]).resize());
  });
});

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
bot.hears(/.+/, async ctx => {
  let name = ctx.message.text;
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–ª–∏ —Å–ø–µ—Ü—Ä–∞–∑–¥–µ–ª
  db.get('SELECT * FROM categories WHERE name=?', [name], (err, cat) => {
    if (cat) {
      db.all('SELECT * FROM products WHERE category_id=? ORDER BY is_hot DESC, is_sale DESC, name', [cat.id], (err, prods) => {
        if (!prods.length) return ctx.reply('–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.');
        prods.forEach(p => {
          ctx.replyWithPhoto(p.img, {
            caption: `*${p.name}*\n${p.price}‚ÇΩ\n–û—Å—Ç–∞—Ç–æ–∫: ${p.stock_qty} ${p.in_pack?'—É–ø.':'—à—Ç.'}\n${p.in_stock?'üü¢ –í –Ω–∞–ª–∏—á–∏–∏':'üî¥ –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}\n`,
            parse_mode: 'Markdown'
          });
        });
      });
    } else if (name === '–•–∏—Ç—ã –ø—Ä–æ–¥–∞–∂') {
      db.all('SELECT * FROM products WHERE is_hot=1 ORDER BY id DESC', [], (err, prods) => {
        if (!prods.length) return ctx.reply('–•–∏—Ç–æ–≤ –ø—Ä–æ–¥–∞–∂ –ø–æ–∫–∞ –Ω–µ—Ç.');
        prods.forEach(p => ctx.replyWithPhoto(p.img, {caption:`*${p.name}*\n${p.price}‚ÇΩ\n–û—Å—Ç–∞—Ç–æ–∫: ${p.stock_qty} ${p.in_pack?'—É–ø.':'—à—Ç.'}\n${p.in_stock?'üü¢ –í –Ω–∞–ª–∏—á–∏–∏':'üî¥ –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}`,parse_mode:'Markdown'}));
      });
    } else if (name === '–ê–∫—Ü–∏–∏') {
      db.all('SELECT * FROM products WHERE is_sale=1 ORDER BY id DESC', [], (err, prods) => {
        if (!prods.length) return ctx.reply('–ê–∫—Ü–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.');
        prods.forEach(p => ctx.replyWithPhoto(p.img, {caption:`*${p.name}*\n${p.price}‚ÇΩ\n–û—Å—Ç–∞—Ç–æ–∫: ${p.stock_qty} ${p.in_pack?'—É–ø.':'—à—Ç.'}\n${p.in_stock?'üü¢ –í –Ω–∞–ª–∏—á–∏–∏':'üî¥ –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}`,parse_mode:'Markdown'}));
      });
    } else if (name === '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º') {
      db.all('SELECT * FROM managers', [], (err, mans) => {
        let txt = '–ù–∞—à–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—ã:\n';
        mans.forEach(m=>{
          txt += `\n${m.name} `;
          if (m.phone) txt += `üì±: ${m.phone} `;
          if (m.telegram) txt += `TG: @${m.telegram.replace('@','')} `;
          if (m.whatsapp) txt += `WA: ${m.whatsapp}`;
        });
        ctx.reply(txt);
      });
    } else if (name === '–ù–∞–∑–∞–¥') {
      ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', Markup.keyboard([['–ö–∞—Ç–∞–ª–æ–≥', '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º']]).resize());
    }
  });
});

// –ê–¥–º–∏–Ω: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∏–∑–∫–æ–º –æ—Å—Ç–∞—Ç–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ –∫–Ω–æ–ø–∫–µ –∏–ª–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é)
const notifyAdminLowStock = () => {
  db.all('SELECT * FROM products WHERE stock_qty<=5 AND in_stock=1', [], (err, prods) => {
    if (prods.length) {
      let msg = '‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ —Ç–æ–≤–∞—Ä–∞:\n';
      prods.forEach(p=>msg+=`\n${p.name}: ${p.stock_qty} —à—Ç`);
      bot.telegram.sendMessage(TG_ADMIN_ID, msg);
    }
  });
};

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤
bot.command('lowstock', ctx => {
  if (ctx.from.id == TG_ADMIN_ID) {
    db.all('SELECT * FROM products WHERE stock_qty<=5 AND in_stock=1', [], (err, prods) => {
      if (!prods.length) return ctx.reply('–í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –Ω–æ—Ä–º–µ');
      let msg = '‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ —Ç–æ–≤–∞—Ä–∞:\n';
      prods.forEach(p=>msg+=`\n${p.name}: ${p.stock_qty} —à—Ç`);
      ctx.reply(msg);
    });
  }
});

// (–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å cron –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è)

// –ó–∞–ø—É—Å–∫
bot.launch();
console.log('TG Bot –∑–∞–ø—É—â–µ–Ω');
